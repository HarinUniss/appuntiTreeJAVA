Test

Test Driven Development

	metodo utilizzato per un corretto sviluppo del software 
	prima di sviluppare il software conviene generare dei test che 
	vanno a verificare se il programma che andremo a costruire funzion

	
	i nomi dei Test devono rispettare una logica e rispondere a 3 parole chiave

	Given 	ParametriInseriti
	When	SpecificaContesto
	Then	RisultatoCheSiAspetta
	

    //es costruttore 1
    @Test
    public void Given_Niente_When_RichestaElencoMenu_Then_VisualizzazioneElencoMenuVegetariano() {
        order.mostraMenuDisponibili();
        assertEquals(false, outContent.toString().isEmpty());
    }

    //es costruttore 2
    @Test
    public void Given_Veetariano_When_RichestaElencoMenu_Then_VisualizzazioneElencoMenuVegetariano() {
        order.mostraMenuScelto(3);
        assertEquals( "Avete scelto il menu 3\n", outContent.toString().replace("\r\n", "\n") );
    }

    

STRUTTURA BASE TEST PER UN METODO 


    @Test
    public void Given_<parametriInseriti>_When_<SpecificaContesto>_Then_<RisultatoCheSiAspetta>() {
        order.<nomeMetodoDaTestare>( <parametro1> , <parametro2> , <...> );

	//recupero la frase che viene stampata a schermo se ne viene stampata una
        String output = outContent.toString().replace("\r\n", "\n");
	//oppure analizzo qualche dato che viene ritornato dal metodo in test

	//comparo il risultato con il valore o la stringa che mi aspetto dal metodo
        assertEquals("Vous avez choisi comme accompagnement : l√©gumes frais\n", output);
    }

		

